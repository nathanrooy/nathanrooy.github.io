<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>shape optimization on Nathan Rooy</title><link>https://nathanrooy.github.io/tags/shape-optimization/</link><description>Recent content in shape optimization on Nathan Rooy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 05 Mar 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://nathanrooy.github.io/tags/shape-optimization/index.xml" rel="self" type="application/rss+xml"/><item><title>BlenderFOAM: Open-source Fluid Based Shape Optimization</title><link>https://nathanrooy.github.io/posts/2019-03-05/blenderfoam-aerodynamic-shape-optimization/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://nathanrooy.github.io/posts/2019-03-05/blenderfoam-aerodynamic-shape-optimization/</guid><description>Introduction I was recently cleaning out my closet and came across an old hard drive labeled &amp;quot;grad school&amp;quot;. After plugging it in and exploring it for a few minutes, I came across all my old thesis stuff. Seeing how this was before I started using GitHub, I figured I would post it in hopes that someone else could get some use from it. Even though it uses older versions of both Blender and OpenFOAM, the results should still be perfectly acceptable given that the equations of fluid dynamics haven't changed much in the last hundred years.</description></item><item><title>Creating parameterized 2D airfoils with quadratic Bézier curves and Python</title><link>https://nathanrooy.github.io/posts/2016-09-14/airfoil-manipulation-via-bezier-curves-with-python/</link><pubDate>Wed, 14 Sep 2016 00:00:00 +0000</pubDate><guid>https://nathanrooy.github.io/posts/2016-09-14/airfoil-manipulation-via-bezier-curves-with-python/</guid><description>Before any type of shape optimization can occur, the geometry needs to be parameterized (usually…). One of the easiest ways to accomplish this is through the use of Bézier curves. For this tutorial, we’re not going to manipulate an existing geometry, rather we’re going to generate the geometry from scratch using a series of connected Bézier curves called a composite Bézier curve.
A quadratic Bézier curve is defined using three control points.</description></item></channel></rss>