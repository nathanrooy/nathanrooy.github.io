<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>geometry manipulation on</title><link>https://nathanrooy.github.io/tags/geometry-manipulation/</link><description>Recent content in geometry manipulation on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Sep 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://nathanrooy.github.io/tags/geometry-manipulation/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating parameterized 2D airfoils with quadratic Bézier curves and Python</title><link>https://nathanrooy.github.io/posts/2016-09-14/airfoil-manipulation-via-bezier-curves-with-python/</link><pubDate>Wed, 14 Sep 2016 00:00:00 +0000</pubDate><guid>https://nathanrooy.github.io/posts/2016-09-14/airfoil-manipulation-via-bezier-curves-with-python/</guid><description>Before any type of shape optimization can occur, the geometry needs to be parameterized (usually…). One of the easiest ways to accomplish this is through the use of Bézier curves. For this tutorial, we’re not going to manipulate an existing geometry, rather we’re going to generate the geometry from scratch using a series of connected Bézier curves called a composite Bézier curve.
A quadratic Bézier curve is defined using three control points.</description></item></channel></rss>