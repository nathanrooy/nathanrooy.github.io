<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>geospatial analysis on Nathan Rooy</title><link>https://nathanrooy.github.io/tags/geospatial-analysis/</link><description>Recent content in geospatial analysis on Nathan Rooy</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 14 Dec 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://nathanrooy.github.io/tags/geospatial-analysis/index.xml" rel="self" type="application/rss+xml"/><item><title>Calculate the Distance Between Two GPS Points with Python (Vincentyâ€™s Inverse Formula)</title><link>https://nathanrooy.github.io/posts/2016-12-18/vincenty-formula-with-python/</link><pubDate>Wed, 14 Dec 2016 00:00:00 +0000</pubDate><guid>https://nathanrooy.github.io/posts/2016-12-18/vincenty-formula-with-python/</guid><description>TL;DR - Vincenty's inverse formula provides an accurate method for calcualting the distance between two latitude/longitude pairs. Learn how to implement your own with Python</description></item><item><title>Calculating the Distance Between Two GPS Coordinates with Python (Haversine Formula)</title><link>https://nathanrooy.github.io/posts/2016-09-07/haversine-with-python/</link><pubDate>Wed, 07 Sep 2016 00:00:00 +0000</pubDate><guid>https://nathanrooy.github.io/posts/2016-09-07/haversine-with-python/</guid><description>TL;DR - By making a few geometric assumptions, the Haversine formula provies an exceptionally simple way of calculating distance between two latitude/longitude pairs.</description></item></channel></rss>