<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Aerodynamics on</title><link>https://nathanrooy.github.io/tags/aerodynamics/</link><description>Recent content in Aerodynamics on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 26 Mar 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://nathanrooy.github.io/tags/aerodynamics/index.xml" rel="self" type="application/rss+xml"/><item><title>Making STL frontal area calculations easier</title><link>https://nathanrooy.github.io/posts/2021-03-26/compute-stl-frontal-area/</link><pubDate>Fri, 26 Mar 2021 00:00:00 +0000</pubDate><guid>https://nathanrooy.github.io/posts/2021-03-26/compute-stl-frontal-area/</guid><description>Introduction When working with aerodynamic properties such as drag, it&amp;rsquo;s common practice to normalize these values against some sort of reference area. For most ground vehicles with a pressure dominated drag contribution this ends up being the cross-sectional area as seen from the front (or projected onto the inlet plane). Most of the time, acquiring these values is pretty easy, especially if you&amp;rsquo;re dealing with some nice clean CAD files. Annoyingly though, sometimes all you have are the non-parametric, triangulated geometry (STL) files.</description></item><item><title>BlenderFOAM: Open-source Fluid Based Shape Optimization</title><link>https://nathanrooy.github.io/posts/2019-03-05/blenderfoam-aerodynamic-shape-optimization/</link><pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate><guid>https://nathanrooy.github.io/posts/2019-03-05/blenderfoam-aerodynamic-shape-optimization/</guid><description>Introduction I was recently cleaning out my closet and came across an old hard drive labeled &amp;ldquo;grad school&amp;rdquo;. After plugging it in and exploring it for a few minutes, I came across all my old thesis stuff. Seeing how this was before I started using GitHub, I figured I would post it in hopes that someone else could get some use from it. Even though it uses older versions of both Blender and OpenFOAM, the results should still be perfectly acceptable given that the equations of fluid dynamics haven&amp;rsquo;t changed much in the last hundred years.</description></item></channel></rss>